server:
  port: 8082
spring:
  application:
    name: Security_Service
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: https://keycloak.fethi.synology.me/auth/realms/KeyClock-INSY2S
          jwk-set-uri: https://keycloak.fethi.synology.me/auth/realms/KeyClock-INSY2S/protocol/openid-connect/certs
      client:
        registration:
          oauth2-client-credentials:
            client-id: KeyCloakAuthService
            client-secret: XhCleeWUyYngL6cKxNW0yH2BABNvytQ8
            scope: openid, profile, roles
            authorization-grant-type: password
            provider: keycloak
        provider:
          keycloak:
            issuer-uri: https://keycloak.fethi.synology.me/auth/realms/KeyClock-INSY2S
            token-uri: https://keycloak.fethi.synology.me/auth/realms/KeyClock-INSY2S/protocol/openid-connect/token

eureka:
  instance:
    hostname: Gateway_Service
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://service-registry:8761/eureka


  # Database
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    hikari:
      pool-name: ':::::::::::: Hikari DS Spades_1-MS POOL ::::::::::::'
      connection-timeout: 60000
      maximum-pool-size: 30
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://postgres:5432/securitykeycloak
    username: postgres

    password: insy2s



  jpa:
    hibernate:
      ddl-auto: create # When you launch the application for the first time - switch "none" at "create"
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    generate-ddl: false
    show-sql: true
    properties:
      hibernate:
        format_sql: true
uri-user: https://keycloak.fethi.synology.me/auth/admin/realms/KeyClock-INSY2S
